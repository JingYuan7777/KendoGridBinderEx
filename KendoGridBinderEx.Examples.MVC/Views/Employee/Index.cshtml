@{
    ViewBag.Title = "Employee Grid Example";
}

<h3>All Employees</h3>
Multi Column Sorting : <input id="multi" type="checkbox" checked="checked" /><br/>
LastName contains : <input id="txtLastName" type="text" /><button id="buttonSearch" class="buttonSearch">Search</button>
<br /><button id="buttonRefresh" class="buttonRefresh">Refresh</button>
<div id="grid"></div>
<br/>
@using (Html.BeginForm("Create", "Employee", FormMethod.Get)) {
    <button class="buttonAdd">Create new</button>
}

<script type="text/javascript">
    var KendoDataSource_EmployeeAutoComplete = {
        serverFiltering: true,
        serverPaging: true,
        serverSorting: true,
        pageSize: 10,
        transport: {
            read: {
                url: '@Url.Action("GetAutoCompleteAsJson", "Employee")',
                dataType: "json"
            }
        }
    };

    $(document).ready(function () {
        $('#multi').click(function () {
            $("#grid").data("kendoGrid").options.sortable.mode = $(this).is(":checked") ? "multiple" : "single";
        });
        
        $("#buttonSearch").click(function () {
            var filters = new Array();
            
            var lastname = $("#txtLastName").val();
            if (lastname) {
                filters.push({ field: "LastName", operator: "contains", value: lastname });
            }
            $("#grid").data("kendoGrid").dataSource.filter(filters);
        });

        $("#buttonRefresh").click(function () {
            var ds = $("#grid").data("kendoGrid").dataSource;
            ds.filter(new Array())
            ds.sort(new Array())
        });
        
        var dataSource = {
            serverPaging: true,
            serverSorting: true,
            serverFiltering: true,
            pageSize: 5,
            transport: {
                read: {
                    type: 'post',
                    dataType: 'json',
                    url: '@Url.Action("Grid")'
                },
                parameterMap: function (options) {
                    if (options.filter) {
                        KendoGrid_FixFilter(dataSource, options.filter);
                    }
                    return options;
                }
            },
            schema: {
                data: 'Data',
                total: 'Total',
                model: {
                    id: 'Id',
                    fields: {
                        CompanyName: { type: 'string' },
                        MainCompanyName: { type: 'string' },
                        Number: { type: 'number' },
                        First: { type: 'string' },
                        LastName: { type: 'string' },
                        Full: { type: 'string' },
                        Email: { type: 'string' },
                        HireDate: { type: 'date' },
                        CountryCode: { type: 'string' },
                        IsManager: { type: 'boolean' },
                        FunctionCode: { type: 'string' },
                        SubFunctionCode: { type: 'string' },
                        Assigned: { type: 'number' }
                    }
                }
            }
        };

        $('#grid').kendoGrid({
            dataSource: dataSource,
            height: '240px',
            columns: [
                {
                    field: 'Id', width: '90px', filterable: false, sortable: false, title: ' ',
                    template:
                        '<a href="/Employee/Details/#=Id#"><img class=iconLink src=/Content/Images/view.png></a>' + '&nbsp;' +
                            '<a href="/Employee/Edit/#=Id#"><img class=iconLink src=/Content/Images/edit.png></a>' +
                            '<a href="/Employee/Delete/#=Id#"><img class=iconLink style=padding-right:0px src=/Content/Images/delete.png></a>'
                },
                { field: 'CompanyName', title: 'Company' },
                { field: 'MainCompanyName', title: 'Main Company' },
                { field: 'Number', title: 'Employee #' },
                { field: 'First', title: 'FirstName', filterable: { ui: function (element) { KendoGridFilterAutoComplete(element, KendoDataSource_EmployeeAutoComplete, "First"); } }  },
                { field: 'LastName', title: 'LastName', filterable: { ui: function (element) { KendoGridFilterAutoComplete(element, KendoDataSource_EmployeeAutoComplete, "LastName"); } } },
                { field: 'Full', title: 'FullName' },
                { field: 'Email' },
                { field: 'HireDate', title: 'Hire Date', format: _DefaultDateTemplate, filterable: { ui: KendoGridFilterDatePicker } },
                { field: 'CountryCode', title: 'Country' },
                { field: "IsManager", title: "Manager", template: "<input type=\"checkbox\" disabled='disabled' #= IsManager ? checked='checked' : '' # class=\"check_row\"/>" },
                {
                    field: 'FunctionCode', title: 'Function', filterable: {
                        extra: false,
                        operators: {
                            string: {
                                eq: "Is equal to",
                                neq: "Is not equal to"
                            }
                        },
                        ui: function (element) { KendoGridFilterDropDownList_Function(element, "Code", "Code"); }
                    }
                },
                {
                    field: 'SubFunctionCode', title: 'SubFunction', filterable: {
                        extra: false,
                        operators: {
                            string: {
                                eq: "Is equal to",
                                neq: "Is not equal to"
                            }
                        },
                        ui: function (element) { KendoGridFilterDropDownList_SubFunction(element, "Code", "Code"); }
                    }
                },
                { field: 'Assigned', title: 'Assigned' }
            ],
            filterable: {
                extra: true
            },
            sortable: {
                mode: 'multiple',
                allowUnsort: true
            },
            pageable: {
                refresh: true,
                pageSizes: true
            }
        });
    });
</script>